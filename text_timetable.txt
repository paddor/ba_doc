*Timetable
** estimated time
The projekt span is from 19.09 until 23.12.
We expect 26 hours work per week which is a total of
320 hours per person.

Project duration	14 weeks
count of workers	2
time per worker		26 hours per week
Total estimated time (without weighted damage)
Total estimated time (inclusive weighted damage)
Project start		19.09.2016
project end		23.12.2016

** time table
All schedulings are done with Trello and Harvest. Trello include all tasks and Harvest is used for the time capturing (should / is ).


** phase / iteration

the duration for one iteration is 2 weeks expect the transition phase which is only one week.
The follow table describe all phases of the project and the keypoints - milestones of the project.

Iteration			Description						End
Inception 1			Project structure, requirements, risk analysis		SW02
MS01 - Projectplan		Date			01.10.2016
				Description		Finished inception ieration
				Work products		Work description
							Project plan
							risiko management

Elaboration 1			Brief use cases,  project management, 			SW04
				requirement specification, multi node planning

Elaboration 2			multi node prototyp, HA planning			SW06
				
MS02 - Concept			Date			12.11.2016
				Description		concept for the construction phase planned
				Work products		requirement specification
							multi node planning


Elaboration 3			HA prototyp						SW07

Construction 1										SW9
Construction 2										SW11
Construction 3			finish coding, testing					SW13
Transition 1			finish documentation (poster, burn cd)			SW14




**meetings
Meetings are agreed in consultation with the lecturer or the customer. 
The meeting minutes is kept, the individual agenda items, decisions and todos.
The project team makes one Weekly standup meeting - place in early / mid-week and serves only as a short exchange of information, 
Review last week, recap the week goals, problems and plenary for questions or suggestions.				

**infrastructure
servername		 sinv-56092.edu.hsr.ch
ip address		152.96.56.92
os			Ubuntu 14.04 LTS
VM EndofLife	 	03.03.2017
cpu			1 vCPU max. 2.2 GHz
ram			1 gb
disk drive		15 gb


**Tools
use				name			version
IDE				vi,
version control system	git	2.*
project management		trello, harvest	


**quality measure
***documentation review
the project partner reads important sentences as well it will be disscused in the weekly stand up meetings.

***meeting minutes
meeting minutes include the participant, agenda items, decisions and todos. Manuel Schuler take over this task and logs erverything.
every meeting minutes is saved on the github wiki site 24 hours before the meeting start and after the meeting it will be updated with the new information.

***Git policy
it's only allowed to pull if all unit tests pass. todo

*** programming guidelines
style guide from andi are used...


*** risks
There were X risks are identified after the end of the inception phase. the risks has total damage of xxx hours. the total damaged hours multiplied with the propapility
of admissino get an total hours of xx. the weighted damage hours are included in the project planning.

***handling risks
Due to the nature of the risks it is only natural that this change in the course of a project.
To meet these changing requirements, the risk table is checked regularly.
In regularly scheduled Weekly standup meeting these risks are therefore checked in each case.
It is possible that changes to existing risks. This usually means that either the likelihood or the unweighted damage must be quickly adapted. 
Moreover, it can happen that a risk can be eliminated completely or a completely new risk occurs. All these points need to be discussed in the team and tracked accordingly.


*** listed risks
	P=probability		D=damage potential
	(1) Not likely		(1) Insignificant
	(2) Very rare		(2) Low
	(3) Rare		(3) Significantly
	(4) possible		(4) Critical
	(5) Common		(5) Project Threatening


the delay is in days given. One day fits 8 hours.

Id	risk										P	D		prevention						measures at entry
1	Roadster requires different ZMQ contexts					1	3
2	wrong protocols chosen / protocol design flaw					3	5
3	CHP/BSTar (if these are needed) difficult to implement as reusable code		2	4
4	CZTop design flaws/limitations							2	2
5	CZMQ changes API								1	3
6	wrong time estimations								4	3
7	managing multiple Projects (at least one per repo) on Github too painful	4	1
8	Loss of a team member								2	3		Enter known absences in the meeting minutes.		In a prolonged outage move milestones and if necessary change the project scope.
																					Delay: 1-5 days
9	Failure to achieve the defined task						1	4		Continuous monitoring whether we are on schedule 	Meeting convened as we still can transpose a large part of the required tasks within the prescribed period.
														and whether all requirements are met.			Delay: 1-5 days
(riskmatrix picture)

*** critical risks




